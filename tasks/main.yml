---
- name: set should_run fact
  set_fact:
    should_run: True

- include: compat.yml

- include: include_vars.yml

- include: Debian.yml
  when: ansible_os_family == 'Debian'

- include: RedHat.yml
  when: ansible_os_family == 'RedHat'

- name: install unzip with default package manager
  action: "{{backcompat_pkg_mgr}} name={{package_name}}"
  sudo: yes
  when: backcompat_pkg_mgr == "yum" or backcompat_pkg_mgr == "apt"

# Use command since dnf was only added as a module in ansible 1.9.0
- name: install unzip with dnf
  command: dnf install -y {{package_name}}
  args:
    creates: /usr/bin/unzip
  sudo: yes
  when: backcompat_pkg_mgr == "dnf"

- name: Check if intellij is installed
  command: grep {{intellij_build}} {{intellij_install_dir}}/build.txt
  register: install
  failed_when: False
  changed_when: False

- name: Download IntelliJ archive
  command: wget -q -O {{intellij_local_package_location}} {{intellij_url}}
  args:
    creates: "{{intellij_local_package_location}}"
  when: install.stdout.find(intellij_build) == -1

- name: Uncompress IntelliJ
  command: rm -rf {{intellij_install_dir}}
  sudo: True
  when: install.stdout.find(intellij_build) == -1

- name: Make unpack directory
  sudo: True
  file:
    path: "{{intellij_install_dir}}"
    state: directory
  when: install.stdout.find(intellij_build) == -1

- name: Uncompress IntelliJ
  command: tar xvfoz {{intellij_local_package_location}} --strip-components 1
  sudo: True
  when: install.stdout.find(intellij_build) == -1
  args:
    chdir: "{{intellij_install_dir}}"
